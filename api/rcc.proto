syntax = "proto3";
//package code generated by Rick  DO NOT EDIT.
package   trpc.tianyuan.rcc_server;

//code generated by Rick  DO NOT EDIT.
option  java_package="github.com.DoubleZ0405.tianyuan.rcc_server.rcc";
option  java_multiple_files = false;
option  java_outer_classname  = "rcc";
//code generated by Rick  DO NOT EDIT.
option  go_package ="github.com/DoubleZ0405/trpcprotocol/tianyuan/rcc_server_rcc";

// 建议使用谷歌protobuf规范 遵循PB语法检查
// 谷歌protobuf规范地址：https://developers.google.com/protocol-buffers/docs/style
// Proto格式检查（Tencent）包含：Google protobuf规范和数据校验检查

// 不建议使用 google/protobuf/any.proto
// any强依赖package type.googleapis.com/_packagename_._messagename_.
// https://developers.google.com/protocol-buffers/docs/proto3#any

// tRPC-Go数据校验模块（**移除注释使用**）
// tsecstr仅允许中英文字母、数字、=、+、/、@、#、_、-传入。注意，字符集不包括空格、|等符号，如有需要，请自定义校验表达式。
// 详参见规则手册：https://iwiki.woa.com/pages/viewpage.action?pageId=241919333
import "trpc/common/validate.proto";

// 返回码
enum ReturnCode {
  RC_OK            = 0;
  RC_FAILED        = 1;
  RC_INVALID_PARAM = 2; // 请求参数错误
  RC_NOT_FOUND     = 3; // 对象未找到
  RC_NO_RES        = 4; // 资源不足
  RC_NOT_MET       = 5; // 前置条件不满足
}

message CommonRep {
  ReturnCode rc   = 1;
  string     msg  = 2;
}

message HelloReq {
  // tRPC数据校验模块 开启自动数据校验。限制传入参数只能为tsecstr默认安全类型
  string msg = 1 [(validate.rules).string.tsecstr = true];
}


message HelloRsp {
  string msg = 1;
}
service Rcc {
  rpc SayHello (HelloReq) returns (HelloRsp);
}
